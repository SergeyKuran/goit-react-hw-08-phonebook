{"version":3,"file":"static/js/162.06ae69c6.chunk.js","mappings":"0QAyEA,UA1Dc,WACZ,IAAAA,GAAwBC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhCI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACdI,GAAUC,EAAAA,EAAAA,MAkBhB,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,QAAMC,SAhBW,SAAAC,GACnBA,EAAIC,iBAEJ,IAAMC,EAAOF,EAAIG,cAEXC,EAAO,CACXC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,OAGnCd,GAAQgB,EAAAA,EAAAA,IAAUL,IAClBF,EAAKQ,OACP,EAIiCb,SAAA,EAC3BC,EAAAA,EAAAA,MAACa,EAAAA,GAAW,CAACC,YAAU,EAAAf,SAAA,EACrBF,EAAAA,EAAAA,KAACkB,EAAAA,EAAS,CAAAhB,SAAC,mBACXF,EAAAA,EAAAA,KAACmB,EAAAA,EAAK,CACJC,KAAK,QACLC,KAAK,QACLC,aAAa,KACbC,YAAY,6BAEdvB,EAAAA,EAAAA,KAACwB,EAAAA,GAAc,CAAAtB,SAAC,mCAChBF,EAAAA,EAAAA,KAACkB,EAAAA,EAAS,CAAAhB,SAAC,cACXC,EAAAA,EAAAA,MAACsB,EAAAA,EAAU,CAACC,KAAK,KAAIxB,SAAA,EACnBF,EAAAA,EAAAA,KAACmB,EAAAA,EAAK,CACJQ,GAAG,SACHN,KAAK,WACLD,KAAMxB,EAAO,OAAS,WACtB2B,YAAY,2BAEdvB,EAAAA,EAAAA,KAAC4B,EAAAA,EAAiB,CAACC,MAAM,SAAQ3B,UAC/BF,EAAAA,EAAAA,KAAC8B,EAAAA,EAAM,CAACC,EAAE,UAAUL,KAAK,KAAKM,QArCtB,WAAH,OAASnC,GAASD,EAAM,EAqCsBM,SAChDN,EAAO,OAAS,eAIvBI,EAAAA,EAAAA,KAACwB,EAAAA,GAAc,CAAAtB,SAAC,yCAElBF,EAAAA,EAAAA,KAACiC,EAAAA,EAAK,CAAA/B,UACJF,EAAAA,EAAAA,KAAC8B,EAAAA,EAAM,CAACV,KAAK,SAASc,YAAY,aAAaC,EAAE,QAAOjC,SAAC,kBAOnE,C","sources":["pages/Login/Login.js"],"sourcesContent":["import {\n  FormControl,\n  FormLabel,\n  FormHelperText,\n  Input,\n  InputGroup,\n  InputRightElement,\n  Button,\n  Stack,\n} from '@chakra-ui/react';\n\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logInUser } from 'redux/auth/fetch';\n\nconst Login = () => {\n  const [show, setShow] = useState(false);\n  const dispath = useDispatch();\n\n  const handleClick = () => setShow(!show);\n\n  const onSubmitForm = evt => {\n    evt.preventDefault();\n\n    const form = evt.currentTarget;\n\n    const user = {\n      email: form.elements.email.value,\n      password: form.elements.password.value,\n    };\n\n    dispath(logInUser(user));\n    form.reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmitForm}>\n        <FormControl isRequired>\n          <FormLabel>Email address</FormLabel>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            autoComplete=\"on\"\n            placeholder=\"Please enter your email\"\n          />\n          <FormHelperText>We'll never share your email.</FormHelperText>\n          <FormLabel>Password</FormLabel>\n          <InputGroup size=\"md\">\n            <Input\n              pr=\"4.5rem\"\n              name=\"password\"\n              type={show ? 'text' : 'password'}\n              placeholder=\"Please enter password\"\n            />\n            <InputRightElement width=\"4.5rem\">\n              <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n                {show ? 'Hide' : 'Show'}\n              </Button>\n            </InputRightElement>\n          </InputGroup>\n          <FormHelperText>We'll never share your password.</FormHelperText>\n        </FormControl>\n        <Stack>\n          <Button type=\"submit\" colorScheme=\"blackAlpha\" w=\"100px\">\n            Sign in\n          </Button>\n        </Stack>\n      </form>\n    </>\n  );\n};\n\nexport default Login;\n"],"names":["_useState","useState","_useState2","_slicedToArray","show","setShow","dispath","useDispatch","_jsx","_Fragment","children","_jsxs","onSubmit","evt","preventDefault","form","currentTarget","user","email","elements","value","password","logInUser","reset","FormControl","isRequired","FormLabel","Input","type","name","autoComplete","placeholder","FormHelperText","InputGroup","size","pr","InputRightElement","width","Button","h","onClick","Stack","colorScheme","w"],"sourceRoot":""}