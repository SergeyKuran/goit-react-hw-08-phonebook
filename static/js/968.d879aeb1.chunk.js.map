{"version":3,"file":"static/js/968.d879aeb1.chunk.js","mappings":"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","sources":["redux/contacts/selector.js","components/ContactForm/ContactForm.styled.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.js"],"sourcesContent":["export const getContacts = state => state.contacts.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getFilter = state => state.filter.filter;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding: 20px;\n`;\n\nexport const Button = styled.button`\n  font-size: 13px;\n  padding: 1px 5px;\n  border-radius: 10px;\n  border: 1px solid;\n\n  cursor: pointer;\n\n  &:hover {\n    color: white;\n    background-color: green;\n    transition: all 0.5s ease-out;\n  }\n`;\n\nexport const Input = styled.input`\n  margin-left: 5px;\n  border-radius: 7px;\n  border: 1px solid black;\n`;\n\nexport const Label = styled.label`\n  margin-left: 5px;\n  border-radius: 7px;\n`;\n","import styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  text-align: start;\n`;\n\nexport const Li = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n`;\n\nexport const Button = styled.button`\n  font-size: 13px;\n  padding: 1px 5px;\n  border-radius: 10px;\n  border: 1px solid;\n\n  cursor: pointer;\n\n  &:hover {\n    color: white;\n    background-color: green;\n    transition: all 0.5s ease-out;\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contacts/fetch';\nimport { getFilter } from 'redux/contacts/filterSlice';\nimport { getContacts } from 'redux/contacts/selector';\nimport { Button, Li, Ul } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const selector = useSelector(getFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const getVisible = () =>\n    contacts.filter(e => e.name.toLowerCase().includes(selector.toLowerCase()));\n  const getVisibleContacts = getVisible();\n\n  return (\n    <div>\n      <Ul>\n        {getVisibleContacts.map(({ id, name, number }) => (\n          <Li key={id}>\n            {name}: {number}\n            <Button\n              type=\"button\"\n              onClick={() => {\n                dispatch(deleteContact(id));\n              }}\n            >\n              Delete\n            </Button>\n          </Li>\n        ))}\n      </Ul>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/fetch';\nimport { getContacts } from 'redux/contacts/selector';\nimport { Button, Form, Input, Label } from './ContactForm.styled';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport Notiflix from 'notiflix';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispath = useDispatch();\n  const selector = useSelector(getContacts);\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const find = selector.some(\n      el => el.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (find) {\n      return Notiflix.Notify.warning(`${name} is already in contacts`);\n    }\n    Notiflix.Notify.success('Operation success!');\n\n    dispath(addContact({ name, number }));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[A-Za-z\\u0080-\\uFFFF ']+$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleChange}\n          />\n        </Label>\n\n        <Label>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"^(\\+?[0-9.\\(\\)\\-\\s]*)$\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleChange}\n          />\n        </Label>\n\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n      <ContactList />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Div = styled.div`\n  position: relative;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const Input = styled.input`\n  width: 415px;\n  margin-left: 10px;\n  border-radius: 7px;\n  border: 1px solid black;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n`;\n\nexport const Li = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n`;\n\nexport const Button = styled.button`\n  padding: 2px 10px;\n  border-radius: 10px;\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterName } from 'redux/contacts/filterSlice';\nimport { getFilter } from 'redux/contacts/selector';\nimport { Input, Label } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const selector = useSelector(getFilter);\n\n  return (\n    <Label>\n      Find contact by name\n      <Input\n        type=\"text\"\n        value={selector}\n        onChange={e => dispatch(filterName(e.target.value))}\n      />\n    </Label>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Div = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n`;\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { useSelector } from 'react-redux';\nimport { getIsLoading } from 'redux/contacts/selector';\nimport { Div } from './Contacts.styled';\n\nconst Contacts = () => {\n  const isLoading = useSelector(getIsLoading);\n\n  return (\n    <>\n      <Div>\n        <div>\n          <title>Your contacts</title>\n        </div>\n        <div>{isLoading && 'Yours request in progress...'}</div>\n        <Filter />\n        <ContactForm />\n      </Div>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getFilter","filter","Form","styled","_templateObject","_taggedTemplateLiteral","Button","_templateObject2","Input","_templateObject3","Label","_templateObject4","Ul","Li","ContactList","dispatch","useDispatch","useSelector","selector","useEffect","fetchContacts","getVisibleContacts","e","name","toLowerCase","includes","_jsx","children","map","_ref","id","number","_jsxs","type","onClick","deleteContact","ContactForm","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","dispath","handleChange","evt","_evt$target","target","value","_Fragment","onSubmit","preventDefault","some","el","Notiflix","concat","addContact","pattern","title","required","onChange","Filter","_templateObject5","filterName","Div"],"sourceRoot":""}